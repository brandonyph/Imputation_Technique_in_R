scale_y_log10()
pdata <- pdata[ran2,]
library(ggplot2)
ggplot(pdata, aes(x=index))  +
geom_line(aes(y=ori), col="blue" ) +
geom_line(aes(y=pmm), col="red"  ) +
geom_line(aes(y=rf),  col="green") +
theme_bw() +
scale_y_log10()
View(pdata)
pdata$resi_pmm <- pdata$ori - pdata$pmm
pdata$resi_rf <- pdata$ori - pdata$rf
ggplot(pdata, aes(x=index))  +
geom_line(aes(y=resi_pmm), col="red"  ) +
geom_line(aes(y=resi_rf),  col="green") +
theme_bw() +
scale_y_log10()
ggplot(pdata, aes(x=index))  +
geom_line(aes(y=resi_pmm), col="red"  ) +
geom_line(aes(y=resi_rf),  col="green") +
theme_bw()
pdata$resi_pmm <- (pdata$ori - pdata$pmm)/pdata$ori
pdata$resi_rf <- (pdata$ori - pdata$rf)/pdata$ori
ggplot(pdata, aes(x=index))  +
geom_line(aes(y=resi_pmm), col="red"  ) +
geom_line(aes(y=resi_rf),  col="green") +
theme_bw()
View(pdata)
pdata$resi_pmm <- (pdata$ori - pdata$pmm)/pdata$ori
pdata$resi_rf <- (pdata$ori - pdata$rf)/pdata$ori
ggplot(pdata, aes(x=index))  +
geom_line(aes(y=resi_pmm), col="red"  ) +
geom_line(aes(y=resi_rf),  col="green") +
theme_bw()
pdata <- padata %>% arrange(ori)
library(dplyr)
pdata <- padata %>% arrange(ori)
pdata <- pdata %>% arrange(ori)
ggplot(pdata, aes(x=index))  +
geom_line(aes(y=resi_pmm), col="red"  ) +
geom_line(aes(y=resi_rf),  col="green") +
theme_bw()
ggplot(pdata, aes(x=ori))  +
geom_line(aes(y=resi_pmm), col="red"  ) +
geom_line(aes(y=resi_rf),  col="green") +
theme_bw()
ggplot(pdata, aes(x=ori))  +
geom_line(aes(y=resi_pmm), col="red"  ) +
geom_line(aes(y=resi_rf),  col="green") +
theme_bw() +
scale_x_log10()
ggplot(pdata, aes(x=ori))  +
geom_line(aes(y=resi_pmm), col="red"  ) +
geom_line(aes(y=resi_rf),  col="green") +
theme_bw() +
scale_x_log10() +
ylab("Residual") +
xlab("Count No")
knitr::opts_chunk$set(echo = TRUE)
library(TCGAbiolinks)
library(TCGAbiolinks)
tcga_data <- readRDS("TCGA.rds")
rawdata <- as.data.frame(tcga_data@assays@data)
rawdata <- rawdata[,-c(1,2)]
rawdata <- rawdata[!rowSums(rawdata)<5000,]
rawdata <- rawdata[1:1000,]
ran2 <- sample(1:nrow(rawdata), 0.20 * nrow(rawdata))
missing_data <-rawdata
missing_data[ran2,1] <- NA
tempData <- mice(missing_data,m=3, maxit=50, meth='2l.lmer', seed=500, printFlag = FALSE)
library(mice)
library(mice)
rawdata <- as.data.frame(tcga_data@assays@data)
rawdata <- rawdata[,-c(1,2)]
rawdata <- rawdata[!rowSums(rawdata)<5000,]
rawdata <- rawdata[1:1000,]
ran2 <- sample(1:nrow(rawdata), 0.20 * nrow(rawdata))
missing_data <-rawdata
missing_data[ran2,1] <- NA
tempData <- mice(missing_data,m=3, maxit=50, meth='2l.lmer', seed=500, printFlag = FALSE)
#Level-1 normal homoscedastic, lmer
imputed_data_pmm <- complete(tempData,1)
tempData <- mice(missing_data,m=3, maxit=50, meth='norm.boot', seed=500, printFlag = FALSE)
#Linear regression using bootstrap
imputed_data_pmm <- complete(tempData,1)
library(mice)
tempData <- mice(missing_data, m=3, maxit=50, meth='lasso.select.norm', seed=500, printFlag = FALSE)
#Lasso select + linear regression
imputed_data_rf <- complete(tempData,1)
imputed_data_2 <- complete(tempData,1)
original <- rawdata[,1]
imputed1 <- imputed_data_1[,1]
imputed_data_1 <- complete(tempData,1)
imputed_data_2 <- complete(tempData,1)
original <- rawdata[,1]
imputed1 <- imputed_data_1[,1]
imputed2 <- imputed_data_2[,1]
pdata <- c()
pdata$ori <- original
pdata$imp1 <- imputed1
pdata$imp2 <- imputed2
pdata$index <- seq(1, length(original))
pdata  <- as.data.frame(pdata)
pdata <- pdata[ran2,]
library(ggplot2)
ggplot(pdata, aes(x=index))  +
geom_line(aes(y=ori), col="blue" ) +
geom_line(aes(y=imp1), col="red"  ) +
geom_line(aes(y=imp2),  col="green") +
theme_bw() +
scale_y_log10()
pdata$resi_imp1 <- (pdata$ori - pdata$imp1)/pdata$ori
pdata$resi_imp2 <- (pdata$ori - pdata$imp2)/pdata$ori
ggplot(pdata, aes(x=ori))  +
geom_line(aes(y=resi_imp1), col="red"  ) +
geom_line(aes(y=resi_imp2),  col="green") +
theme_bw() +
scale_x_log10() +
ylab("Residual") +
xlab("Count No")
View(pdata)
ggplot(pdata, aes(x=index))  +
geom_line(aes(y=ori), col="blue" ) +
geom_line(aes(y=imp1), col="red"  )
ggplot(pdata, aes(x=index))  +
geom_line(aes(y=ori), col="blue" ) +
geom_line(aes(y=imp1), col="red"  ) +
geom_line(aes(y=imp2),  col="green")
ggplot(pdata, aes(x=index))  +
geom_line(aes(y=ori), col="blue" ) +
geom_line(aes(y=imp1), col="red"  ) +
geom_line(aes(y=imp2),  col="green") +
theme_bw() +
scale_y_log10()
ggplot(pdata, aes(x = index))  +
geom_line(aes(y = ori), col = "blue") +
geom_line(aes(y = imp1), col = "red") +
geom_line(aes(y = imp2),  col = "green") +
theme_bw() +
scale_y_log10()
pdata$resi_imp1 <- (pdata$ori - pdata$imp1)/pdata$ori
pdata$resi_imp2 <- (pdata$ori - pdata$imp2)/pdata$ori
ggplot(pdata, aes(x=ori))  +
geom_line(aes(y=resi_imp1), col="red"  ) +
geom_line(aes(y=resi_imp2),  col="green") +
theme_bw() +
scale_x_log10() +
ylab("Residual") +
xlab("Count No")
View(pdata)
ggplot(pdata, aes(x=ori))  +
geom_line(aes(y=resi_imp1), col="red"  )
ggplot(pdata, aes(x=ori))  +
geom_line(aes(y=resi_imp1), col="red"  ) +
geom_line(aes(y=resi_imp2),  col="green")
tempData <- mice(missing_data,m=3, maxit=50, meth='rf', seed=500, printFlag = FALSE)
#RandomForest
imputed_data_1 <- complete(tempData,1)
original <- rawdata[, 1]
imputed1 <- imputed_data_1[, 1]
imputed2 <- imputed_data_2[, 1]
pdata <- c()
pdata$ori <- original
pdata$imp1 <- imputed1
pdata$imp2 <- imputed2
pdata$index <- seq(1, length(original))
pdata  <- as.data.frame(pdata)
pdata <- pdata[ran2, ]
library(ggplot2)
ggplot(pdata, aes(x = index))  +
geom_line(aes(y = ori), col = "blue") +
geom_line(aes(y = imp1), col = "red") +
geom_line(aes(y = imp2),  col = "green") +
theme_bw() +
scale_y_log10()
pdata$resi_imp1 <- (pdata$ori - pdata$imp1)/pdata$ori
pdata$resi_imp2 <- (pdata$ori - pdata$imp2)/pdata$ori
ggplot(pdata, aes(x=ori))  +
geom_line(aes(y=resi_imp1), col="red"  ) +
geom_line(aes(y=resi_imp2),  col="green") +
theme_bw() +
scale_x_log10() +
ylab("Residual") +
xlab("Count No")
library(mice)
tempData <- mice(missing_data, m=3, maxit=50, meth='2l.norm', seed=500, printFlag = FALSE)
library(mice)
tempData <- mice(missing_data, m=3, maxit=50, meth='lasso.select.norm', seed=500, printFlag = FALSE)
#Lasso select + linear regression
imputed_data_2 <- complete(tempData,1)
knitr::opts_chunk$set(echo = TRUE)
vec <- c(4, NA, 7, 5, 7, 1, 6, 3, NA, 5)
mean(vec,na.rm = TRUE)
vec
vec[is.na(vec)] <- mean(vec[!is.na(vec)])
vec
iris <- iris
df_missing <- iris$Sepal.Length
df_missing[c(2,4,6,8,10)] <- NA
df_missing[is.na(df_missing)] <- mean(df_missing[!is.na(df_missing)])
meanimpute <- function(vec){
vec[is.na(vec)] <- mean(vec[!is.na(vec)])
return(vec)
}
iris <- iris
df_missing <- iris$Sepal.Length
df_missing[c(2,4,6,8,10)] <- NA
df_missing
df_missing <- meanimpute(df_missing)
df_missing[c(2,4,6,8,10)]
library(nonmemica)
locf(c(NA,1,2,NA,NA,3,NA,4,NA))
nocb(c(NA,1,2,NA,NA,3,NA,4,NA))
forbak(c(NA,1,2,NA,NA,3,NA,4,NA))
airquality <- data.frame(datasets::airquality)
locf(c(NA,1,2,NA,NA,3,NA,4,NA))
nocb(c(NA,1,2,NA,NA,3,NA,4,NA))
forbak(c(NA,1,2,NA,NA,3,NA,4,NA))
airquality <- data.frame(datasets::airquality)
removedata <- sample(1:nrow(airquality))[1:10]
sample(1:nrow(airquality))
removedata <- sample(1:nrow(airquality))[1:10]
airquality_missing  <- airquality
airquality_missing$Temp[removedata] <- NA
airquality_missing$Temp <- forbak(airquality_missing$Temp)
airquality_missing$Temp[removedata] <- NA
airquality_missing$Temp
airquality_missing$Temp <- forbak(airquality_missing$Temp)
airquality_missing$Temp
original <- airquality$Temp[removedata]
imputed <- airquality_missing$Temp[removedata]
original <- as.numeric(original)
imputed  <- as.numeric(imputed)
plot(original,imputed)
abline(a = 1, b = 1)
plot(original,imputed)
abline(a = 1, b = 1)
plot(airquality$Temp)
tab <- c()
tab$original  <- as.data.frame(airquality$Temp)
tab$imputated <- as.data.frame(airquality_missing$Temp)
tab$diff <- tab$original == tab$imputated
table(tab$diff)
plot(airquality$Temp)
plot(airquality_missing$Temp)
removedata <- sample(1:nrow(airquality))[1:10]
airquality_missing  <- airquality
airquality_missing$Temp[removedata] <- NA
airquality_missing$Temp <- forbak(airquality_missing$Temp)
original <- airquality$Temp[removedata]
imputed <- airquality_missing$Temp[removedata]
original <- as.numeric(original)
imputed  <- as.numeric(imputed)
plot(original,imputed)
abline(a = 1, b = 1)
plot(airquality$Temp)
plot(airquality_missing$Temp)
# how KNN works
# KNN is a clustering algorithm, allowing the prediction of species from Sepal and petal details
df <- iris
#the normalization function is created
nor <-function(x) { (x -min(x))/(max(x)-min(x))   }
##Run nomalization on first 4 coulumns of dataset because they are the predictors
df_norm <- as.data.frame(lapply(df[,c(1,2,3,4)], nor))
vec <- c(4, NA, 7, 5, 7, 1, 6, 3, NA, 5)
mean(vec,na.rm = TRUE)
vec[is.na(vec)] <- mean(vec[!is.na(vec)])
vec
iris <- iris
df_missing <- iris$Sepal.Length
df_missing[c(2,4,6,8,10)] <- NA
df_missing[is.na(df_missing)] <- mean(df_missing[!is.na(df_missing)])
meanimpute <- function(vec){
vec[is.na(vec)] <- mean(vec[!is.na(vec)])
return(vec)
}
iris <- iris
df_missing <- iris$Sepal.Length
df_missing[c(2,4,6,8,10)] <- NA
df_missing <- meanimpute(df_missing)
df_missing[c(2,4,6,8,10)]
library(nonmemica)
locf(c(NA,1,2,NA,NA,3,NA,4,NA))
nocb(c(NA,1,2,NA,NA,3,NA,4,NA))
forbak(c(NA,1,2,NA,NA,3,NA,4,NA))
airquality <- data.frame(datasets::airquality)
removedata <- sample(1:nrow(airquality))[1:10]
airquality_missing  <- airquality
airquality_missing$Temp[removedata] <- NA
airquality_missing$Temp <- forbak(airquality_missing$Temp)
original <- airquality$Temp[removedata]
imputed <- airquality_missing$Temp[removedata]
original <- as.numeric(original)
imputed  <- as.numeric(imputed)
plot(original,imputed)
abline(a = 1, b = 1)
plot(airquality$Temp)
plot(airquality_missing$Temp)
# how KNN works
# KNN is a clustering algorithm, allowing the prediction of species from Sepal and petal details
df <- iris
#the normalization function is created
nor <-function(x) { (x -min(x))/(max(x)-min(x))   }
##Run nomalization on first 4 coulumns of dataset because they are the predictors
df_norm <- as.data.frame(lapply(df[,c(1,2,3,4)], nor))
View(df_norm)
ran <- sample(1:nrow(df), 0.9 * nrow(df))
df_train <- df_norm[ran,]
df_test <- df_norm[-ran,]
df_target_category <- iris[ran,5]
df_test_category <- iris[-ran,5]
library(class)
##run knn function
predicted <- knn(df_train,df_test,cl=df_target_category,k=13)
##create confusion matrix
tab <- table(predicted,df_test_category)
tab
ran <- sample(1:nrow(df), 0.9 * nrow(df))
df_train <- df_norm[ran,]
df_test <- df_norm[-ran,]
df_target_category <- iris[ran,5]
df_test_category <- iris[-ran,5]
library(class)
##run knn function
predicted <- knn(df_train,df_test,cl=df_target_category,k=3)
##create confusion matrix
tab <- table(predicted,df_test_category)
tab
##this function divides the correct predictions by total number of predictions that tell us how accurate teh model is.
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(tab)
library(DMwR2)
ran2 <- sample(1:nrow(df), 0.1 * nrow(df))
df_missing <- df[,-5]
df_missing$Sepal.Length[ran2] <- ""
View(df_missing)
#KNN imputation
df_imputed <- knnImputation(df_missing,k=3)
tab <- c()
tab <- c()
tab$original <- df$Sepal.Length[ran2]
tab$imputed <- as.numeric(df_imputed$Sepal.Length[ran2])
tab$diff <- tab$original - tab$imputed
plot(df$Sepal.Length)
plot(df_imputed$Sepal.Length)
percetange_dff <- tab$diff / tab$original * 100
# the concept is the same, but we are clustering the other columns and filing the missing data based on the nearest neighbor in the clustering
library(DMwR2)
ran2 <- sample(1:nrow(df), 0.1 * nrow(df))
df_missing <- df[,-5]
df_missing$Sepal.Length[ran2] <- ""
#KNN imputation
df_imputed <- knnImputation(df_missing,k=3)
tab <- c()
tab$original <- df$Sepal.Length[ran2]
tab$imputed <- as.numeric(df_imputed$Sepal.Length[ran2])
tab$diff <- tab$original - tab$imputed
plot(df$Sepal.Length)
plot(df_imputed$Sepal.Length)
percetange_dff <- tab$diff / tab$original * 100
barplot(percetange_dff)
for(i in 1:10) {
df_imputed <- knnImputation(df_missing, k = i, scale = T)
tab <- c()
tab$original <- df$Sepal.Length[ran2]
tab$imputed <- as.numeric(df_imputed$Sepal.Length[ran2])
tab$diff <- tab$original - tab$imputed
percetange_dff <- tab$diff / tab$original * 100
print(barplot(percetange_dff))
}
library(mice)
data <- airquality
data[1:7,3] <- NA
data[1:5,4] <- NA
head(data)
tempData <- mice(data,m=3, maxit=50, meth='pmm', seed=500, printFlag = FALSE)
summary(tempData)
imputedData <- complete(tempData,1)
data <- airquality
data[1:7,3] <- NA
data[1:5,4] <- NA
head(data)
tempData <- mice(data,m=3, maxit=50, meth='pmm', seed=500, printFlag = FALSE)
View(tempData)
summary(tempData)
imputedData <- complete(tempData,1)
View(imputedData)
diff_pmm <- cbind(airquality[1:7,3],imputedData[1:7,3])
diff_pmm
diff2_pmm <- cbind(airquality[1:5,4], imputedData[1:5,4])
diff2_pmm
View(data)
data <- airquality
data[1:7,3] <- NA
data[1:5,4] <- NA
tempData <- mice(data,m=3, maxit=50, meth='rf', seed=500, printFlag = FALSE)
imputedData <- complete(tempData,1)
diff_rf <- cbind(airquality[1:7,3],imputedData[1:7,3])
diff2_rf <- cbind(airquality[1:5,4], imputedData[1:5,4])
original <- c(airquality[1:7,3],airquality[1:5,4])
pmm <- c(diff_pmm[,2],diff2_pmm[,2])
rf <- c(diff_rf[,2],diff2_rf[,2])
pdata <- c()
pdata$ori <- original
pdata$pmm <- pmm
pdata$rf <- rf
pdata$index <- seq(1, length(original))
pdata  <- as.data.frame(pdata)
library(ggplot2)
ggplot(pdata, aes(x=index))  +
geom_line(aes(y=ori), col="blue" ) +
geom_line(aes(y=pmm), col="red"  ) +
geom_line(aes(y=rf),  col="green") +
theme_bw()
tcga_data <- readRDS("TCGA.rds")
View(tcga_data)
library(mice)
rawdata <- as.data.frame(tcga_data@assays@data)
rawdata <- log10(rawdata)
rawdata <- log10(rawdata+1)
library(mice)
rawdata <- as.data.frame(tcga_data@assays@data)
rawdata <- log10(rawdata+1)
View(rawdata)
library(mice)
rawdata <- as.data.frame(tcga_data@assays@data)
rawdata <- rawdata[,-c(1,2)]
rawdata <- log10(rawdata+1)
rawdata <- rawdata[!rowSums(rawdata)<5000,]
rawdata <- rawdata[1:1000,]
ran2 <- sample(1:nrow(rawdata), 0.20 * nrow(rawdata))
missing_data <-rawdata
missing_data[ran2,1] <- NA
rawdata <- as.data.frame(tcga_data@assays@data)
rawdata <- rawdata[,-c(1,2)]
rawdata <- as.data.frame(tcga_data@assays@data)
View(rawdata)
rawdata <- rawdata[,-c(1,2)]
rawdata <- log10(rawdata+1)
View(rawdata)
rawdata <- rawdata[!rowSums(rawdata)<5000,]
rawdata <- rawdata[1:1000,]
ran2 <- sample(1:nrow(rawdata), 0.20 * nrow(rawdata))
missing_data <-rawdata
missing_data[ran2,1] <- NA
View(missing_data)
missing_data <-rawdata
missing_data[ran2,1] <- NA
ran2 <- sample(1:nrow(rawdata), 0.20 * nrow(rawdata))
missing_data <-rawdata
View(missing_data)
View(rawdata)
rawdata <- rawdata[!rowSums(rawdata)<5000,]
rawdata <- rawdata[-rowSums(rawdata)<5000,]
rawdata <- rawdata[1:1000,]
library(mice)
rawdata <- as.data.frame(tcga_data@assays@data)
rawdata <- rawdata[,-c(1,2)]
rawdata <- log10(rawdata+1)
rawdata <- rawdata[-rowSums(rawdata)<1,]
rawdata <- rawdata[1:1000,]
ran2 <- sample(1:nrow(rawdata), 0.20 * nrow(rawdata))
missing_data <- rawdata
missing_data[ran2,1] <- NA
View(missing_data)
tcga_data <- readRDS("TCGA.rds")
View(tcga_data)
rawdata <- as.data.frame(tcga_data@assays@data$tpm_unstrand)
View(rawdata)
#rawdata <- rawdata[,-c(1,2)]
rawdata <- log10(rawdata+1)
rawdata <- rawdata[-rowSums(rawdata)<1,]
rawdata <- rawdata[-rowSums(rawdata)<10,]
rawdata <- rawdata[!rowSums(rawdata)<10,]
rawdata <- rawdata[1:1000,]
ran2 <- sample(1:nrow(rawdata), 0.20 * nrow(rawdata))
missing_data <- rawdata
missing_data[ran2,1] <- NA
View(missing_data)
tempData <- mice(missing_data,m=3, maxit=50, meth='rf', seed=500, printFlag = FALSE)
#RandomForest
imputed_data_1 <- complete(tempData,1)
library(mice)
tempData <- mice(missing_data, m=3, maxit=50, meth='lasso.select.norm', seed=500, printFlag = FALSE)
#Lasso select + linear regression
imputed_data_2 <- complete(tempData,1)
original <- rawdata[, 1]
imputed1 <- imputed_data_1[, 1]
imputed2 <- imputed_data_2[, 1]
pdata <- c()
pdata$ori <- original
pdata$imp1 <- imputed1
pdata$imp2 <- imputed2
pdata$index <- seq(1, length(original))
pdata  <- as.data.frame(pdata)
pdata <- pdata[ran2, ]
library(ggplot2)
ggplot(pdata, aes(x = index))  +
geom_line(aes(y = ori), col = "blue") +
geom_line(aes(y = imp1), col = "red") +
geom_line(aes(y = imp2),  col = "green") +
theme_bw() +
scale_y_log10()
pdata$resi_imp1 <- (pdata$ori - pdata$imp1)/pdata$ori
pdata$resi_imp2 <- (pdata$ori - pdata$imp2)/pdata$ori
ggplot(pdata, aes(x=ori))  +
geom_line(aes(y=resi_imp1), col="red"  ) +
geom_line(aes(y=resi_imp2),  col="green") +
theme_bw() +
scale_x_log10() +
ylab("Residual") +
xlab("Count No")
